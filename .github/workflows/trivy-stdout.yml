# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# https://github.com/aquasecurity/trivy-action
# https://github.com/actions/cache
# https://github.com/docker/build-push-action

name: Trivy (prints to stdout)

on:
  pull_request:
  schedule:
    - cron: 0 2/4 * * 1-5 # '31 15 * * 6' - Run every hour to compare results
  workflow_dispatch:

jobs:
  update-trivy-db:
    name: Update Trivy vulnerability database
    runs-on: "ubuntu-20.04"
    permissions:
      contents: read  # for actions/checkout to fetch code
    steps:
      - name: Create Trivy cache file
        run: mkdir -p .trivycache

      - name: Restore cached vuln DB
        id: cache-vulndb-restore
        uses: actions/cache/restore@v4
        with:
          path: .trivycache
          key: ${{ runner.os }}-vulndb

      - name: Save vuln DB in cache
        uses: actions/cache/save@v4
        with:
          path: .trivycache
          key: ${{ steps.cache-vulndb-restore.outputs.cache-primary-key }}

  trivy-image-scan:
    name: Trivy image scan
    runs-on: "ubuntu-20.04"
    permissions:
      contents: read  # for actions/checkout to fetch code
    needs: update-trivy-db
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Restore cached image layers
        id: cache-image-restore
        uses: actions/cache/restore@v4
        with:
          path: .buildx-cache
          key: ${{ runner.os }}-image
        
          # - name: Build an image from Dockerfile
          #   run: |
          #     docker build -t tokle.dev/juice-shop:${{ github.sha }} .

      - name: Build Docker image from Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
          tags: 'tokle.dev/juice-shop:${{ github.sha }}'
          load: true  # to store locally?

      - name: Save image layers to cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .buildx-cache
          key: ${{ steps.cache-image-restore.outputs.cache-primary-key }}

      - name: Create Trivy cache file
        run: mkdir -p .trivycache

      - name: Restore cached vuln DB
        id: cache-vulndb-restore
        uses: actions/cache/restore@v4
        with:
          path: .trivycache
          key: ${{ runner.os }}-vulndb

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8
        with:
          image-ref: 'tokle.dev/juice-shop:${{ github.sha }}'
          scan-type: image
          format: 'table'
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln,misconfig,secret'
          cache-dir: .trivycache

  trivy-repo-scan:
    name: Trivy repo scan (fs scan)
    runs-on: ubuntu-20.04
    permissions:
      contents: read  # for actions/checkout to fetch code
    needs: update-trivy-db
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Trivy cache file
        run: mkdir -p .trivycache

      - name: Restore cached vuln DB
        id: cache-vulndb-restore
        uses: actions/cache/restore@v4
        with:
          path: .trivycache
          key: ${{ runner.os }}-vulndb

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          severity: 'CRITICAL'
          scanners: 'vuln,misconfig,secret'

      - name: Save vuln DB in cache
        uses: actions/cache/save@v4
        with:
          path: .trivycache
          key: ${{ steps.cache-vulndb-restore.outputs.cache-primary-key }}

  trivy-iac-scan:
    name: Trivy IaC scan
    runs-on: ubuntu-20.04
    permissions:
      contents: read  # for actions/checkout to fetch code
      security-events: write  # for github/codeql-action/upload-sarif to upload sarif results
    needs: update-trivy-db
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Trivy cache file
        run: mkdir -p .trivycache

      - name: Restore cached vuln DB
        id: cache-vulndb-restore
        uses: actions/cache/restore@v4
        with:
          path: .trivycache
          key: ${{ runner.os }}-vulndb

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8
        with:
          scan-type: 'config'
          ignore-unfixed: true
          format: 'table'
          severity: 'CRITICAL'

